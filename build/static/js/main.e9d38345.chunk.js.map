{"version":3,"sources":["assets/beep.mp3","js/helpers.js","js/model.js","js/api.js","components/Navigator.jsx","components/ResultOptions.jsx","components/Box.jsx","components/Wifi.jsx","components/Home.jsx","components/Modal.jsx","components/Config.jsx","components/WifiConfig.jsx","components/App.jsx","index.js"],"names":["getSavedStorage","key","defaultVal","JSON","parse","window","localStorage","getItem","setSavedStorage","obj","setItem","stringify","removeFromStorage","target","values","filter","x","beepSound","Audio","beep","initial","pxWidth","cmWidth","boxes","size","time","ready","alarm","limit","model","setPxWidth","action","state","setCmWidth","setBoxes","setSize","setTime","clock","Date","setClock","network","setNetwork","message","setMessage","localhost","location","hostname","remotehost","sendResult","payload","a","console","log","url","axiosPatch","response","data","networkScan","axios","get","networkSave","ssid","pass","post","getDeviceId","getCommit","defaults","headers","patch","Navigator","to","className","icon","faHome","faTools","ResultOptions","handleNegative","handlePositive","handleInvalid","handleMismatch","useStoreActions","useState","selection","setSelection","counter","setCounter","keyFlag","setKeyFlag","selectKey","setSelectKey","previousKey","isCommand","test","useEffect","buttonHandler","e","now","preventDefault","document","addEventListener","tic","setInterval","removeEventListener","clearInterval","disabled","Box","setReady","setFree","id","specimenID","status","setStatus","useStoreState","ratio","sizePx","parseInt","boxStyle","height","width","minHeight","minWidth","handleStart","handleStop","play","style","onClick","max","value","Wifi","faWifi","Home","elements","Array","keys","initBoxes","forEach","element","push","processingDateTime","numberCode","setNumberCode","code","setCode","setSpecimenID","display","setDisplay","lastTime","setLastTime","testBoxes","setTestBoxes","deviceID","setDeviceID","tempBoxes","handleResponse","find","resultDateTime","toLocaleString","handleSuccess","handleError","error","currentTests","map","availableBox","indexOf","includes","SpecimenID","CovidTestResultID","CovidTestStatusID","DeviceID","ProcessingDateTime","ResultDateTimeTicks","then","catch","sendProcessingStart","recordedValues","recorded","record","res","scannerHandler","length","interval","navigator","onLine","ResultDateTime","Modal","active","setActive","title","confirm","setAction","Config","navigate","useNavigate","loading","setLoading","power","setPower","rpiId","setRpiId","commitDate","setCommitDate","actions","pxRef","setPxRef","cmRef","setCmRef","boxesRef","setBoxesRef","sizeRef","setSizeRef","timeRef","setTimeRef","commit","date","type","placeholder","onChange","setTimeout","faPowerOff","WifiConfig","networks","setNetworks","ssidRef","useRef","passRef","ref","current","n","snr","store","createStore","App","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e9d38345.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/beep.94ec08ca.mp3\";","import beep from \"../assets/beep.mp3\";\r\n\r\nexport const getSavedStorage = (key, defaultVal) => {\r\n  return JSON.parse(window.localStorage.getItem(key)) || defaultVal[key];\r\n};\r\n\r\nexport const setSavedStorage = (key, obj) => {\r\n  window.localStorage.setItem(key, JSON.stringify(obj));\r\n};\r\n\r\n// export const appendToStorage = (key, obj) => {\r\n//   const values = getSavedStorage(key, { [key]: [] });\r\n//   values.push(obj);\r\n//   setSavedStorage(key, values);\r\n// };\r\n\r\nexport const removeFromStorage = (key, obj, target) => {\r\n  const values = getSavedStorage(key, { [key]: [] });\r\n  setSavedStorage(\r\n    key,\r\n    values.filter((x) => x[target] !== obj[target])\r\n  );\r\n};\r\n\r\nexport const beepSound = new Audio(beep);\r\n","import { action } from \"easy-peasy\";\r\nimport { getSavedStorage } from \"./helpers\";\r\n\r\nconst initial = {\r\n  pxWidth: 1366,\r\n  cmWidth: 41,\r\n  boxes: 10,\r\n  size: [7, 2],\r\n  time: {\r\n    ready: 15,\r\n    alarm: 19,\r\n    limit: 20,\r\n  },\r\n};\r\n\r\nconst model = {\r\n  pxWidth: getSavedStorage(\"pxWidth\", initial),\r\n  setPxWidth: action((state, pxWidth) => {\r\n    state.pxWidth = pxWidth;\r\n  }),\r\n\r\n  cmWidth: getSavedStorage(\"cmWidth\", initial),\r\n  setCmWidth: action((state, cmWidth) => {\r\n    state.cmWidth = cmWidth;\r\n  }),\r\n\r\n  boxes: getSavedStorage(\"boxes\", initial),\r\n  setBoxes: action((state, boxes) => {\r\n    state.boxes = boxes;\r\n  }),\r\n\r\n  size: getSavedStorage(\"size\", initial),\r\n  setSize: action((state, size) => {\r\n    state.size = size;\r\n  }),\r\n\r\n  time: getSavedStorage(\"time\", initial),\r\n  setTime: action((state, time) => {\r\n    state.time = time;\r\n  }),\r\n\r\n  clock: Date(),\r\n  setClock: action((state, clock) => {\r\n    state.clock = clock;\r\n  }),\r\n\r\n  network: false,\r\n  setNetwork: action((state, network) => {\r\n    state.network = network;\r\n  }),\r\n\r\n  message: \"Scan a test\",\r\n  setMessage: action((state, message) => {\r\n    state.message = message;\r\n  }),\r\n};\r\n\r\nexport default model;","import axios from \"axios\";\r\n\r\nconst localhost = `http://${window.location.hostname}:9999`;\r\nconst remotehost = `http://${window.location.hostname}:5102`;\r\n\r\nexport const sendResult = async (payload) => {\r\n  console.log(\"... sending results:\", payload);\r\n  const url = `${remotehost}/api/covidratesting/device/ratestresult`;\r\n  const response = await axiosPatch(url, payload);\r\n  return response.data;\r\n};\r\n\r\nexport const networkScan = async () => {\r\n  console.log(\"... getting events\");\r\n  const url = `${localhost}/network/scan`;\r\n  const response = await axios.get(url);\r\n  return response.data;\r\n};\r\n\r\nexport const networkSave = async (ssid, pass) => {\r\n  console.log(\"... configure wifi\");\r\n  const url = `${localhost}/network/save`;\r\n  const response = await axios.post(url, { ssid, pass });\r\n  return response.data;\r\n};\r\n\r\nexport const shutdown = async () => {\r\n  console.log(\"... shutting down\");\r\n  const url = `${localhost}/shutdown`;\r\n  const response = await axios.post(url);\r\n  return response.data;\r\n};\r\n\r\nexport const restart = async () => {\r\n  console.log(\"... restarting\");\r\n  const url = `${localhost}/restart`;\r\n  const response = await axios.post(url);\r\n  return response.data;\r\n};\r\n\r\nexport const getDeviceId = async () => {\r\n  console.log(\"... get device ID\");\r\n  const url = `${localhost}/device/id`;\r\n  const response = await axios.get(url);\r\n  console.log(response.data);\r\n  return response.data;\r\n};\r\n\r\nexport const getCommit = async () => {\r\n  console.log(\"... get git commit\");\r\n  const url = `${localhost}/git/commit`;\r\n  const response = await axios.get(url);\r\n  return response.data;\r\n};\r\n\r\nconst axiosPatch = (url, payload) => {\r\n  axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\n  return axios.patch(url, payload);\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTools, faHome } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigator = ({ to }) => {\r\n  return (\r\n    <Link to={to} className=\"navigator\">\r\n      {to === \"/home\" ? (\r\n        <FontAwesomeIcon icon={faHome} />\r\n      ) : (\r\n        <FontAwesomeIcon icon={faTools} />\r\n      )}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Navigator;\r\n","import { useStoreActions } from \"easy-peasy\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst ResultOptions = ({ handleNegative, handlePositive, handleInvalid, handleMismatch }) => {\r\n  const setMessage = useStoreActions((action) => action.setMessage);\r\n  const [selection, setSelection] = useState(null);\r\n  const [counter, setCounter] = useState(3);\r\n  const [time, setTime] = useState();\r\n  const [keyFlag, setKeyFlag] = useState();\r\n  const [selectKey, setSelectKey] = useState();\r\n  let previousKey = null;\r\n  let counterVar = 3;\r\n\r\n  const isCommand = (key) => {\r\n    const commands =  /^[#|$|%]$/;\r\n    return commands.test(key);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const buttonHandler = (e) => {\r\n      const key = e.key;\r\n\r\n      if (isCommand(key)) {\r\n        setSelectKey(key);\r\n        setKeyFlag(Date.now())\r\n        if (previousKey === null) {\r\n          // eslint-disable-next-line\r\n            previousKey = key;\r\n            setSelection(key);\r\n            setMessage(\"Press again to confirm:\");\r\n        } \r\n      }\r\n      if (key === \"F5\") e.preventDefault();\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", buttonHandler);\r\n\r\n    const tic = setInterval(() => {\r\n      setTime(Date.now())\r\n    }, 1000);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", buttonHandler);\r\n      clearInterval(tic)\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    if (selection !== null) {\r\n      setCounter(counter - 1);\r\n      // eslint-disable-next-line\r\n      counterVar=counter-1\r\n    }\r\n    else {\r\n      setCounter(3);\r\n      // eslint-disable-next-line\r\n      counterVar=3;\r\n    }\r\n  }, [time])\r\n\r\n  useEffect(()=>{\r\n    if (counter <= 0 && isCommand(selectKey)) {\r\n      if (selectKey === \"#\" && selection === \"#\") handleNegative();\r\n      if (selectKey === \"$\" && selection === \"$\") handlePositive();\r\n      if (selectKey === \"%\" && selection === \"%\") handleInvalid();\r\n      if (selectKey !== selection) handleMismatch();\r\n    }\r\n    // eslint-disable-next-line\r\n  },[keyFlag])\r\n\r\n  return (\r\n    <div className=\"field is-grouped mt-4\">\r\n      {(selection === \"#\" || selection === null) && (\r\n        <button\r\n          // onClick={handleNegative}\r\n          className=\"button is-large is-outlined is-success\"\r\n          disabled={selection !== null && counter > 0}\r\n        >\r\n          Not detected\r\n        </button>\r\n      )}\r\n      {(selection === \"$\" || selection === null) && (\r\n        <button\r\n          // onClick={handlePositive}\r\n          className=\"button is-large ml-4 is-outlined is-danger\"\r\n          disabled={selection !== null && counter > 0}\r\n        >\r\n          Detected\r\n        </button>\r\n      )}\r\n      {(selection === \"%\" || selection === null) && (\r\n        <button\r\n          // onClick={handleInvalid}\r\n          className=\"button is-large ml-4 is-outlined is-warning\"\r\n          disabled={selection !== null && counter > 0}\r\n        >\r\n          Incomplete\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ResultOptions;\r\n","import { useStoreState } from \"easy-peasy\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { beepSound } from \"../js/helpers\";\r\n\r\nconst Box = ({ test, setReady, setFree }) => {\r\n  const { id, specimenID } = test;\r\n  const [counter, setCounter] = useState(0);\r\n  const [status, setStatus] = useState(\"free\"); // free - counting - finished - overtime\r\n\r\n  const size = useStoreState((state) => state.size);\r\n  const pxWidth = useStoreState((state) => state.pxWidth);\r\n  const cmWidth = useStoreState((state) => state.cmWidth);\r\n  const clock = useStoreState((state) => state.clock);\r\n  const time = useStoreState((state) => state.time);\r\n  const { ready, limit, alarm } = time;\r\n\r\n  const ratio = pxWidth / cmWidth;\r\n  const sizePx = [parseInt(size[0] * ratio), parseInt(size[1] * ratio)];\r\n\r\n  const boxStyle = {\r\n    height: sizePx[1],\r\n    width: sizePx[0],\r\n    minHeight: sizePx[1],\r\n    minWidth: sizePx[0],\r\n  };\r\n\r\n  const handleStart = () => {\r\n    setStatus(\"counting\");\r\n  };\r\n\r\n  const handleStop = () => {\r\n    setStatus(\"free\");\r\n    setCounter(0);\r\n    setReady(id, false);\r\n    setFree(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (status !== \"free\") {\r\n      setCounter(counter + 1);\r\n    }\r\n    if (counter >= ready) {\r\n      setStatus(\"finished\");\r\n      setReady(id, true);\r\n    }\r\n    if (counter >= limit) setStatus(\"overtime\");\r\n    if (counter >= alarm) beepSound.play();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [clock]);\r\n\r\n  useEffect(() => {\r\n    if (specimenID !== null) handleStart();\r\n    else handleStop();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specimenID]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`out-box animate__animated has-background-${\r\n          (status === \"free\" && \"success\") ||\r\n          (status === \"counting\" && \"warning\") ||\r\n          (status === \"finished\" && \"danger\") ||\r\n          (status === \"overtime\" && \"danger\")\r\n        } ${status === \"overtime\" && \"animate__flash animate__infinite\"}`}\r\n      >\r\n        <div\r\n          className={`is-flex is-flex-centered has-background-black is-flex-column`}\r\n          style={boxStyle}\r\n        >\r\n          <p className=\"help is-success box-code is-size-4\">{specimenID}</p>\r\n          <div className=\"field is-grouped\">\r\n            <button\r\n              className=\"button m-1 is-small is-rounded\"\r\n              onClick={handleStart}\r\n            >\r\n              {\">\"}\r\n            </button>\r\n            <button\r\n              className=\"button m-1 is-small is-rounded\"\r\n              onClick={handleStop}\r\n            >\r\n              {\"[X]\"}\r\n            </button>\r\n            <button className=\"button m-1 is-small is-rounded\">\r\n              {counter}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <progress\r\n          className={`progress is-info mt-2`}\r\n          max={ready}\r\n          value={counter}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Box;\r\n","import { useStoreState } from \"easy-peasy\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faWifi } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Wifi = () => {\r\n  const network = useStoreState((state) => state.network);\r\n\r\n  return (\r\n    <Link to={\"/wifi\"} className=\"wifi\">\r\n      <FontAwesomeIcon\r\n        icon={faWifi}\r\n        className={network ? \"has-text-success\" : \"has-text-grey\"}\r\n      />\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Wifi;\r\n","import { useStoreActions, useStoreState } from \"easy-peasy\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getDeviceId, sendResult } from \"../js/api\";\r\nimport {\r\n  getSavedStorage,\r\n  removeFromStorage,\r\n} from \"../js/helpers\";\r\nimport Navigator from \"./Navigator\";\r\nimport ResultOptions from \"./ResultOptions\";\r\nimport Box from \"./Box\";\r\nimport Wifi from \"./Wifi\";\r\n\r\nconst Home = () => {\r\n  const boxes = useStoreState((state) => state.boxes);\r\n  const message = useStoreState((state) => state.message);\r\n  const clock = useStoreState((state) => state.clock);\r\n  const network = useStoreState((state) => state.network);\r\n  const setClock = useStoreActions((action) => action.setClock);\r\n  const setMessage = useStoreActions((action) => action.setMessage);\r\n  const setNetwork = useStoreActions((action) => action.setNetwork);\r\n  const elements = [...Array(parseInt(boxes)).keys()];\r\n  const initBoxes = [];\r\n  elements.forEach((element) => {\r\n    initBoxes.push({\r\n      id: element,\r\n      specimenID: null,\r\n      ready: false,\r\n      processingDateTime: null,\r\n    });\r\n  });\r\n\r\n  const [numberCode, setNumberCode] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  const [specimenID, setSpecimenID] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n  const [lastTime, setLastTime] = useState(Date.now());\r\n\r\n  const [testBoxes, setTestBoxes] = useState(initBoxes);\r\n  const [deviceID, setDeviceID] = useState(\"\");\r\n\r\n  const setReady = (id, ready) => {\r\n    let tempBoxes = [...testBoxes];\r\n    tempBoxes[id].ready = ready;\r\n  };\r\n\r\n  const setFree = (id) => {\r\n    let tempBoxes = [...testBoxes];\r\n    tempBoxes[id].specimenID = null;\r\n    setTestBoxes(tempBoxes);\r\n  };\r\n\r\n  const handleResponse = () => {\r\n    setDisplay(false);\r\n    setMessage(\"\");\r\n    console.log(specimenID);\r\n    let target = testBoxes.find((x) => x.specimenID === specimenID);\r\n    setFree(target.id);\r\n    setReady(target.id, false);\r\n    let resultDateTime = new Date().toLocaleString() + '';\r\n    return {\r\n      processingDateTime: target.processingDateTime,\r\n      resultDateTime: resultDateTime,\r\n    };\r\n  };\r\n\r\n  const handleSuccess = (payload) => {\r\n    console.log(\"... data send:\", payload);\r\n    removeFromStorage(\"recorded\", payload, \"specimenID\");\r\n  };\r\n\r\n  const handleError = (payload) => {\r\n    console.error(\"... data not send\", payload);\r\n    console.error(\"... save to local storage\", payload);\r\n    // appendToStorage(\"recorded\", payload);\r\n  };\r\n\r\n  const handleInvalid = () => {\r\n    const { processingDateTime, resultDateTime } = handleResponse();\r\n    const payload = {\r\n      SpecimenID: specimenID,\r\n      CovidTestResultID: 3,\r\n      CovidTestStatusID: 6,\r\n      DeviceID: deviceID,\r\n      ProcessingDateTime: processingDateTime,\r\n      ResultDateTime: resultDateTime,\r\n    };\r\n    sendResult(payload)\r\n      .then(() => handleSuccess(payload))\r\n      .catch(() => handleError(payload));\r\n  };\r\n  const handlePositive = () => {\r\n    const { processingDateTime, resultDateTime } = handleResponse();\r\n    const payload = {\r\n      SpecimenID: specimenID,\r\n      CovidTestResultID: 2,\r\n      CovidTestStatusID: 4,\r\n      DeviceID: deviceID,\r\n      ProcessingDateTime: processingDateTime,\r\n      ResultDateTime: resultDateTime,\r\n    };\r\n    sendResult(payload)\r\n      .then(() => handleSuccess(payload))\r\n      .catch(() => handleError(payload));\r\n  };\r\n  const handleNegative = () => {\r\n    const { processingDateTime, resultDateTime } = handleResponse();\r\n    const payload = {\r\n      SpecimenID: specimenID,\r\n      CovidTestResultID: 1,\r\n      CovidTestStatusID: 4,\r\n      DeviceID: deviceID,\r\n      ProcessingDateTime: processingDateTime,\r\n      ResultDateTime: resultDateTime,\r\n    };\r\n    sendResult(payload)\r\n      .then(() => handleSuccess(payload))\r\n      .catch(() => handleError(payload));\r\n  };\r\n  const sendProcessingStart = (specimenID, processingDateTime) => {\r\n    const payload = {\r\n      SpecimenID: specimenID,\r\n      CovidTestResultID: null,\r\n      CovidTestStatusID: 3,\r\n      DeviceID: deviceID,\r\n      ProcessingDateTime: processingDateTime,\r\n      ResultDateTimeTicks: null,\r\n    };\r\n    sendResult(payload)\r\n      .then(() => handleSuccess(payload))\r\n      .catch(() => handleError(payload));\r\n  };\r\n\r\n  const handleMismatch = () => {\r\n    setDisplay(false);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const now = Date.now();\r\n    setCode(`${now - lastTime > 500 ? \"\" : code}${numberCode}`);\r\n    setLastTime(now);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [numberCode]);\r\n\r\n  useEffect(() => {\r\n    const now = Date.now();\r\n     if (now - lastTime > 500 && code !== \"\") {\r\n      setSpecimenID(code);\r\n      let tempBoxes = [...testBoxes];\r\n      let currentTests = tempBoxes.map((x) => x.specimenID);\r\n      let availableBox = currentTests.indexOf(null);\r\n      let isNew = !currentTests.includes(code);\r\n\r\n      if (isNew) {\r\n        setDisplay(false);\r\n        if (availableBox >= 0) {\r\n          testBoxes[availableBox].specimenID = code;\r\n          testBoxes[availableBox].processingDateTime = new Date().toLocaleString() + '';\r\n          sendProcessingStart(code, testBoxes[availableBox].processingDateTime);\r\n          setMessage(\"Starting timer for test: \" + code);\r\n        } else {\r\n          setMessage(\"No box available for: \" + code);\r\n        }\r\n      } else {\r\n        let box = testBoxes.find((x) => x.specimenID === code);\r\n        if (box.ready) {\r\n          setMessage(`Test ${code} is ready, select an option: `);\r\n          setDisplay(true);\r\n        } else {\r\n          setMessage(`Test ${code} is not ready`);\r\n        }\r\n      }\r\n\r\n      setTestBoxes(tempBoxes);\r\n      setCode(\"\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [clock]);\r\n\r\n  useEffect(() => {\r\n    if (network) {\r\n      // Send data recorded in local storage\r\n      let recordedValues = getSavedStorage(\"recorded\", {\r\n        recorded: [],\r\n      });\r\n      console.log(\"Send data from storage\");\r\n      recordedValues.forEach((record) => {\r\n        console.log(\"...sending data:\", record);\r\n        sendResult(record).then(() =>\r\n          removeFromStorage(\"recorded\", record, \"specimenID\")\r\n        );\r\n      });\r\n    }\r\n  }, [network]);\r\n\r\n  useEffect(() => {\r\n    getDeviceId().then((res) => setDeviceID(res.id));\r\n\r\n    const scannerHandler = (e) => {\r\n      const key = e.key;\r\n      const codechars = /\\w/;\r\n      if (key.length === 1 && codechars.test(key)) setNumberCode(key);\r\n      if (key === \"F5\") e.preventDefault();\r\n    };\r\n\r\n    const interval = setInterval(() => {\r\n      setClock(Date());\r\n    }, 500);\r\n\r\n    document.addEventListener(\"keydown\", scannerHandler);\r\n    window.addEventListener(\"offline\", () => setNetwork(false));\r\n    window.addEventListener(\"online\", () => setNetwork(true));\r\n    setNetwork(window.navigator.onLine);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", scannerHandler);\r\n      window.removeEventListener(\"offline\", () => setNetwork(false));\r\n      window.removeEventListener(\"online\", () => setNetwork(true));\r\n      clearInterval(interval);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <header>\r\n        <p className=\"has-text-centered title mt-4\">{message}</p>\r\n        {display && (\r\n          <ResultOptions\r\n            handleNegative={handleNegative}\r\n            handlePositive={handlePositive}\r\n            handleInvalid={handleInvalid}\r\n            handleMismatch={handleMismatch}\r\n          />\r\n        )}\r\n      </header>\r\n      <div className=\"box-container\">\r\n        {testBoxes.map((x) => (\r\n          <Box key={x.id} test={x} setReady={setReady} setFree={setFree} />\r\n        ))}\r\n        <Navigator\r\n          to=\"/config\"\r\n          onClick={() => console.log(\"Clicked Navigator\")}\r\n        />\r\n        <Wifi />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const Modal = ({ active, setActive, title, confirm, setAction }) => {\r\n  return (\r\n    <div className={`modal ${active && \"is-active\"}`}>\r\n      <div className=\"modal-background\"></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-card-head\">\r\n          <p className=\"modal-card-title\">{title}</p>\r\n        </header>\r\n\r\n        <footer className=\"modal-card-foot is-flex-end\">\r\n          <button\r\n            className=\"button is-success is-outlined\"\r\n            onClick={() => setAction()}\r\n          >\r\n            {confirm}\r\n          </button>\r\n          <button className=\"button\" onClick={() => setActive(false)}>\r\n            Cancel\r\n          </button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { setSavedStorage } from \"../js/helpers\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { faPowerOff } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getCommit, getDeviceId } from \"../js/api\";\r\nimport Navigator from \"./Navigator\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst Config = () => {\r\n  let navigate = useNavigate();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [power, setPower] = useState(false);\r\n  const [rpiId, setRpiId] = useState(\"\");\r\n  const [commitDate, setCommitDate] = useState(\"\");\r\n\r\n  const pxWidth = useStoreState((state) => state.pxWidth);\r\n  const cmWidth = useStoreState((state) => state.cmWidth);\r\n  const boxes = useStoreState((state) => state.boxes);\r\n  const size = useStoreState((state) => state.size);\r\n  const time = useStoreState((state) => state.time);\r\n\r\n  const setPxWidth = useStoreActions((actions) => actions.setPxWidth);\r\n  const setCmWidth = useStoreActions((actions) => actions.setCmWidth);\r\n  const setBoxes = useStoreActions((actions) => actions.setBoxes);\r\n  const setSize = useStoreActions((actions) => actions.setSize);\r\n  const setTime = useStoreActions((actions) => actions.setTime);\r\n\r\n  const [pxRef, setPxRef] = useState(pxWidth);\r\n  const [cmRef, setCmRef] = useState(cmWidth);\r\n  const [boxesRef, setBoxesRef] = useState(boxes);\r\n  const [sizeRef, setSizeRef] = useState(size);\r\n  const [timeRef, setTimeRef] = useState(time);\r\n\r\n  const handleSave = () => {\r\n    setPxWidth(pxRef);\r\n    setCmWidth(cmRef);\r\n    setBoxes(boxesRef);\r\n    setSize(sizeRef);\r\n    setTime(timeRef);\r\n\r\n    setSavedStorage(\"pxWidth\", pxRef);\r\n    setSavedStorage(\"cmWidth\", cmRef);\r\n    setSavedStorage(\"boxes\", boxesRef);\r\n    setSavedStorage(\"size\", sizeRef);\r\n    setSavedStorage(\"time\", timeRef);\r\n    setMessage(\" ... going home\");\r\n    setLoading(true);\r\n    setTimeout(() => navigate(\"/home\"), 1000);\r\n  };\r\n\r\n  const handlePower = () => {\r\n    console.log(\"... powering off\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDeviceId().then((res) => setRpiId(res.id));\r\n    getCommit().then((res) => setCommitDate(res.commit.date));\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Navigator to=\"/home\" />\r\n      <div className=\"is-flex is-flex-centered config\">\r\n        <div>\r\n          <h1 className=\"subtitle has-text-centered\">Configuration</h1>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Number of boxes</label>\r\n            <div className=\"control\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"number\"\r\n                placeholder=\"10\"\r\n                value={boxesRef}\r\n                onChange={(e) => setBoxesRef(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Width of screen in pixels.</label>\r\n            <div className=\"control\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"number\"\r\n                placeholder=\"1366\"\r\n                value={pxRef}\r\n                onChange={(e) => setPxRef(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Width of screen in centimeters.</label>\r\n            <div className=\"control\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"number\"\r\n                placeholder=\"41\"\r\n                value={cmRef}\r\n                onChange={(e) => setCmRef(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Size of box in cm.</label>\r\n            <div className=\"control is-flex\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"number\"\r\n                placeholder=\"7\"\r\n                value={sizeRef[0]}\r\n                onChange={(e) => setSizeRef([e.target.value, sizeRef[1]])}\r\n                title=\"Width\"\r\n              />\r\n              <input\r\n                className=\"input ml-4\"\r\n                type=\"number\"\r\n                placeholder=\"2\"\r\n                value={sizeRef[1]}\r\n                onChange={(e) => setSizeRef([sizeRef[0], e.target.value])}\r\n                title=\"Height\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Process time in min.</label>\r\n            <div className=\"control is-flex\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"number\"\r\n                placeholder=\"15\"\r\n                value={timeRef.ready}\r\n                title=\"Ready to read time\"\r\n                onChange={(e) =>\r\n                  setTimeRef({ ...timeRef, ready: e.target.value })\r\n                }\r\n              />\r\n              <input\r\n                className=\"input ml-4\"\r\n                type=\"number\"\r\n                placeholder=\"19\"\r\n                value={timeRef.alarm}\r\n                title=\"Alarm time\"\r\n                onChange={(e) =>\r\n                  setTimeRef({ ...timeRef, alarm: e.target.value })\r\n                }\r\n              />\r\n              <input\r\n                className=\"input ml-4\"\r\n                type=\"number\"\r\n                placeholder=\"20\"\r\n                value={timeRef.limit}\r\n                title=\"Maximum time to get reading\"\r\n                onChange={(e) =>\r\n                  setTimeRef({ ...timeRef, limit: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={handleSave}\r\n            className={`button is-success is-outlined mt-4 ${\r\n              loading && \"is-loading\"\r\n            }`}\r\n          >\r\n            Save\r\n          </button>\r\n          <p className=\"help\">{message}</p>\r\n          <div className=\"is-flex is-flex-centered m-4 \">\r\n            <FontAwesomeIcon\r\n              icon={faPowerOff}\r\n              className=\"has-text-danger pointer\"\r\n              size=\"lg\"\r\n              onClick={() => setPower(true)}\r\n            />\r\n            <Modal\r\n              active={power}\r\n              setActive={setPower}\r\n              setAction={handlePower}\r\n              title=\"Do you want to shutdown?\"\r\n              confirm=\"Shutdown\"\r\n            />\r\n          </div>\r\n          <div className=\"is-flex mt-4 is-flex-between\">\r\n            <p className=\"has-text-grey mt-4\">ID: {rpiId}</p>\r\n            <p className=\"has-text-grey mt-4\">Version: {commitDate}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Config;\r\n","import Navigator from \"./Navigator\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { networkSave, networkScan } from \"../js/api\";\r\n\r\nconst WifiConfig = () => {\r\n  let navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [networks, setNetworks] = useState([]);\r\n  const ssidRef = useRef();\r\n  const passRef = useRef();\r\n\r\n  const handleSave = () => {\r\n    setLoading(true);\r\n    networkSave(ssidRef.current.value, passRef.current.value);\r\n    setTimeout(() => navigate(\"/home\"), 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    networkScan().then((res) => setNetworks(res.networks));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navigator to=\"/home\" />\r\n      <div className=\"is-flex is-flex-centered config\">\r\n        <div>\r\n          <h1 className=\"subtitle has-text-centered\">Wifi Configuration</h1>\r\n          <div className=\"field\">\r\n            <label className=\"label\">SSID</label>\r\n            <div className=\"control\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"WiFi SSID\"\r\n                ref={ssidRef}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Password</label>\r\n            <div className=\"control\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"********\"\r\n                ref={passRef}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            onClick={handleSave}\r\n            className={`button is-success is-outlined mt-4 ${\r\n              loading && \"is-loading\"\r\n            }`}\r\n          >\r\n            Save\r\n          </button>\r\n          <p className=\"help\">{\"\"}</p>\r\n          <p className=\"mt-4 has-text-centered\">Available networks</p>\r\n          <table className=\"table is-striped is-fullwidth\">\r\n            <thead>\r\n              <tr>\r\n                <th> SSID </th>\r\n                <th> SNR </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {networks.map((n) => (\r\n                <tr>\r\n                  <td>{n.ssid}</td>\r\n                  <td>{n.snr}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WifiConfig;\r\n","import { Routes, Route } from \"react-router-dom\";\r\nimport { StoreProvider, createStore } from \"easy-peasy\";\r\nimport model from \"../js/model\";\r\nimport Home from \"./Home\";\r\nimport Config from \"./Config\";\r\nimport WifiConfig from \"./WifiConfig\";\r\n\r\nconst store = createStore(model);\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <StoreProvider store={store}>\r\n        <Routes>\r\n          <Route path=\"home\" element={<Home />} />\r\n          <Route path=\"config\" element={<Config />} />\r\n          <Route path=\"wifi\" element={<WifiConfig />} />\r\n          <Route path=\"*\" element={<Home />} />\r\n        </Routes>\r\n      </StoreProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./css/bulma-darkly.css\";\r\nimport \"./css/style.css\";\r\nimport \"animate.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}